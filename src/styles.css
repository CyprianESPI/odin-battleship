:root {
    /* https://m1.material.io/style/color.html#color-color-palette */
    /* Blue */
    --clr-primary-50: #E3F2FD;
    --clr-primary-100: #BBDEFB;
    --clr-primary-200: #90CAF9;
    --clr-primary-300: #64B5F6;
    --clr-primary-400: #42A5F5;
    --clr-primary-500: #2196F3;
    --clr-primary-600: #1E88E5;
    --clr-primary-700: #1976D2;
    --clr-primary-800: #1565C0;
    --clr-primary-900: #0D47A1;

    /* Red */
    --clr-A100: #FF8A80;
    --clr-A200: #FF5252;
    --clr-A400: #FF1744;
    --clr-A700: #D50000;

    --br: 15px;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/*border: 2px solid red;*/

body {
    /* Disable mobile refresh on scroll up */
    overscroll-behavior: none;
    display: grid;
    /* svh is like vh but it also accounts for top navigator search bar*/
    height: 100svh;
    grid-template-rows: auto 1fr auto;
    text-align: center;
}

header {
    display: flex;
    justify-content: space-around;
    padding: 10px 5% 10px 5%;
    background-color: var(--clr-primary-900);
    color: var(--clr-primary-100);
}

main {
    display: grid;
    grid-auto-flow: column;
}

/* Responsive for mobile */
@media only screen and (max-width: 1026px) {
    main {
        grid-auto-flow: row;
    }

    h1 {
        font-size: medium;
    }

    h2 {
        font-size: small;
    }

    .move-btn {
        font-size: 15px;
        width: 15px;
    }
}

button {
    border: none;
}

button.enabled {
    cursor: pointer;
}

.disabled {
    filter: brightness(0.666);
    pointer-events: none;
}

.rounded-btn {
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    width: 3rem;
    height: 3rem;
    border-radius: 3rem;
    background-color: var(--clr-primary-100);
    color: var(--clr-primary-900);
}

.move-btn {
    text-shadow: 0 0 10px #000;
    border-radius: 50%;
    box-shadow: none;
    background: none;
    margin-top: -5cqh;
    margin-left: -5cqh;
    width: 10cqh;
    height: 10cqh;
    font-size: 10cqh;
    color: white;
}

@media (hover:hover) {
    .move-btn.enabled:hover {
        filter: brightness(1.50);
        transform: scale(1.15);
        text-shadow: 0 0 20px #000;
    }

    .rounded-btn.enabled:hover {
        transform: scale(1.15);
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 20px;
    }
}

.hidden {
    display: none;
}

/* card like container */
.card {
    border-radius: var(--br);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
}

.player-container {
    display: grid;
    grid-template-rows: auto 1fr;
    margin: 10px 5% 1% 5%;
}

.board-wrapper {
    position: relative;
}

.board-container {
    position: absolute;
    margin: auto;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    max-width: 100%;
    max-height: 100%;
    aspect-ratio: 1;
    display: grid;
    grid-template-rows: auto 1fr;
    grid-template-columns: auto 1fr;
}

.numbers,
.letters {
    display: flex;
    justify-content: space-around;
}

.letters {
    flex-flow: column;
}

/* Overlay 2 grids on top of another */
.board-stack {
    display: grid;
}

.blurred {
    filter: blur(10.0rem);
}

.board-stack.disabled {

    /* Ensure overlays are disabled too */
    * {
        pointer-events: none;
    }
}

/* set childs on same grid area to ensure they overlap */
.board-stack>* {
    grid-column: 1;
    grid-row: 1;
}

.overlay {
    container-type: size;
    position: relative;
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: 1fr;
    pointer-events: none;
}

.overlay>* {
    pointer-events: all;
    position: absolute;
    grid-column: 1;
    grid-row: 1;
}

.ship-overlay {
    background-color: gray;
    opacity: 0.5;
    border-radius: 100px;
}

.ship-overlay.damaged {
    filter: brightness(0.666);
}

.ship-overlay.sunk {
    filter: brightness(0);
}

.board {
    display: grid;
    grid-template-rows: repeat(10, 1fr);
    grid-template-columns: repeat(10, 1fr);
    gap: 5px;
    padding: 5px;
}

.cell {
    display: flex;
    justify-content: center;
    align-items: center;
}

.dot {
    height: 50%;
    width: 50%;
    background-position: center;
    /* Center the image */
    background-repeat: no-repeat;
    /* Do not repeat the image */
    background-size: contain;
}

.clickable {
    cursor: crosshair;
}

.clickable:hover {
    filter: brightness(0.50);
}

.water,
.ship {
    background-color: var(--clr-primary-300);
}

/* Hide computer's ships */
.board-hidden>:first-child>* {
    background-color: var(--clr-primary-300);
}

/* Hide computer's ships overlay */
.board-hidden>:nth-child(2) {
    :not(.sunk) {
        display: none;
    }
}

#oponent>h2 {
    background-color: var(--clr-A700);
    color: white;
    border-radius: var(--br) var(--br) 0 0;
    padding: 5px;
}

#you>h2 {
    background-color: var(--clr-primary-900);
    color: white;
    border-radius: var(--br) var(--br) 0 0;
    padding: 5px;
}


dialog {
    /* Center its content */
    align-items: center;

    /* Cannot give a display value otherwise the dialog is always visible */

    padding: var(--br);
    border-radius: var(--br);

    /* Center the dialog in the middle of the page*/
    top: 50%;
    left: 50%;
    -webkit-transform: translateX(-50%) translateY(-50%);
    -moz-transform: translateX(-50%) translateY(-50%);
    -ms-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);

    >* {
        display: grid;
        justify-items: center;
        align-items: center;
        gap: var(--br);
        margin: var(--br);
    }
}

#dialog-game-over.loss {
    background: radial-gradient(circle at top, var(--clr-A700) 0%, var(--clr-A700) 50%, var(--clr-A700) 50%, #FFFFFF 50%, #FFFFFF 50%);
}

#dialog-game-over.win {
    background: radial-gradient(circle at top, var(--clr-primary-500) 0%, var(--clr-primary-500) 50%, var(--clr-primary-500) 50%, #FFFFFF 50%, #FFFFFF 50%);
}

input {
    border: 2px solid var(--clr-primary-500);
    padding: 2px;

    &:focus {
        /* remove default browser style on focus */
        outline: none !important;
        border-color: var(--clr-primary-500);
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    }

    &:invalid {
        border-color: var(--clr-A700);
    }
}

.shake {
    /* Start the shake animation and make the animation last for 0.5 seconds */
    animation: shake 0.5s;

    /* When the animation is finished, start again */
    animation-iteration-count: infinite;
}

@keyframes shake {
    0% {
        transform: translate(1px, 1px) rotate(0deg);
    }

    10% {
        transform: translate(-1px, -2px) rotate(-1deg);
    }

    20% {
        transform: translate(-3px, 0px) rotate(1deg);
    }

    30% {
        transform: translate(3px, 2px) rotate(0deg);
    }

    40% {
        transform: translate(1px, -1px) rotate(1deg);
    }

    50% {
        transform: translate(-1px, 2px) rotate(-1deg);
    }

    60% {
        transform: translate(-3px, 1px) rotate(0deg);
    }

    70% {
        transform: translate(3px, 1px) rotate(-1deg);
    }

    80% {
        transform: translate(-1px, -1px) rotate(1deg);
    }

    90% {
        transform: translate(1px, 2px) rotate(0deg);
    }

    100% {
        transform: translate(1px, -2px) rotate(-1deg);
    }
}